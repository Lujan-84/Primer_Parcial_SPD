/* 
-----------------------CONSIGNA PRIMER PARCIAL----------- --------------------Parte Uno  ----------------------------
	Diseñar un contador de 0 a 99 utilizando dos displays de 7 segmentos y tres botones para
controlar la cuenta. Debes implementar la técnica de multiplexación para mostrar los dígitos
en los displays. El contador debe comenzar en 0 y debe ser capaz de aumentar o disminuir
su valor en una unidad con los botones.
--------------------Parte Dos ------------------------------
Modifica el proyecto de la Parte 1 de la siguiente manera:

1. Sustituye uno de los botones por un interruptor deslizante (switch) de dos posiciones.
Dependiendo de la posición del interruptor, el display debe mostrar o bien el contador (como
en la Parte 1) o los números primos en el rango de 0 a 99.
2. Investiga un componente electrónico adicional que podría mejorar este proyecto.
Proporciona una descripción detallada del componente, su función y cómo se podría
integrar en el proyecto.
-Motor de cc
-Motor de aficionado
3. Investigar en la semana y agregar uno de los siguientes componentes
-Sensor de flexión
-Sensor de fuerza
-Sensor de temperatura
---------------------Parte Tres ------------------------------
-Si tu número de documento termina en (0-3) deberás implementar a tu proyecto la
fotoresistencia
---------------------Parte Cuatro---------------------------------------
-Si tu número de documento termina en (0-3) deberás implementar a tu proyecto que el interruptor deslizante de la parte dos tenga la función de encender y apagar el sistema, solo mostrando el contador.
---------------------------------------------------------------------------------

*/

#define B 13
#define A 12
#define F 11
#define G 10
#define E 9
#define D 8
#define C 7
#define MOTOR 6
#define INTERRUPTOR 2
#define GREEN 5
#define YELLOW 4
#define RED 3
#define TEMPERATURA A0
#define FOTORESISTENCIA A1
#define UNIDAD A4
#define DECENAS A5

#define APAGADOS 0
#define TIEMPO_DISPLAY_ON 15

void setup()
{
  pinMode(A, OUTPUT);
  pinMode(B, OUTPUT);
  pinMode(C, OUTPUT);
  pinMode(D, OUTPUT);
  pinMode(E, OUTPUT);
  pinMode(F, OUTPUT);
  pinMode(G, OUTPUT);
  pinMode(GREEN, OUTPUT);
  pinMode(YELLOW, OUTPUT);
  pinMode(RED, OUTPUT);
  pinMode(MOTOR, OUTPUT);
  pinMode(INTERRUPTOR, INPUT_PULLUP);
  pinMode(UNIDAD, OUTPUT);
  pinMode(DECENAS, OUTPUT);
  digitalWrite(UNIDAD, 0);
  digitalWrite(DECENAS, 0);
  encenderDigito(0);  
  Serial.begin(9600);  
}

int interruptor = 0;
int segundos_ahora = 0;
int segundos_anterior = -1;
int contador = -1;
int temperaturaRead = 0;
int temperatura = 0;

void loop()
{
   temperaturaRead = analogRead(TEMPERATURA);
   temperatura = map(temperaturaRead,20,358,-40,125);
   Serial.print("temperatura");
   Serial.println(temperatura);
   int interruptor = digitalRead(INTERRUPTOR);
   int lectura_foto = analogRead(FOTORESISTENCIA);

   // Aumento o disminuyo el contador cada vez que pasa un segundo, en caso de mostrar números primos llama a la funcion interruptor_on()
   if (segundos_ahora != segundos_anterior)
   { 
      if (interruptor)
      {
        encenderDigito(APAGADOS);
        digitalWrite(MOTOR,LOW);
        encender_luces(LOW,LOW,LOW);
        
      }
      else
      {
         if (temperatura >= 20)    // Si la temperatura es mayor o igual a 20° C la cuenta aumenta y se enciende el motor
         {
             contador++;
             digitalWrite(MOTOR,HIGH);
             if (contador > 99)
             {
                contador = 0;
             }
          }
          else			//Si la temperatura es menor a 20° C la cuenta disminuye y se apaga el motor
          { 
             if (contador  < 0)
            {
              contador = 99;
            }
            contador--;
            digitalWrite(MOTOR,LOW);
        }
        //if (interruptor)
        //{  
           //contador = interruptor_on(contador,temperatura);
        //}
        
        luces_led(lectura_foto);
        
      }
      segundos_anterior = segundos_ahora;
      
   } 
   if (not interruptor)
   {
     imprimirCuenta(contador);
      
   }
   segundos_ahora = millis()/1000;
   delay(TIEMPO_DISPLAY_ON);  
   
}

// Define los estados de los leds del display dependiendo del dígito que queramos mostrar
void imprimirDigito(int n)
{
  apagarLeds();
  switch (n){
    case 0:
      encenderLeds(HIGH,HIGH,HIGH,HIGH,HIGH,HIGH,LOW);
    break;
    case 1:
      encenderLeds(LOW,HIGH,HIGH,LOW,LOW,LOW,LOW);
    break;
    case 2:
      encenderLeds(HIGH,HIGH,LOW,HIGH,HIGH,LOW,HIGH);
    break;
    case 3:
      encenderLeds(HIGH,HIGH,HIGH,HIGH,LOW,LOW,HIGH);
    break;
    case 4:
       encenderLeds(LOW,HIGH,HIGH,LOW,LOW,HIGH,HIGH);
    break;
    case 5:
      encenderLeds(HIGH,LOW,HIGH,HIGH,LOW,HIGH,HIGH);
    break;
    case 6:
      encenderLeds(LOW,LOW,HIGH,HIGH,HIGH,HIGH,HIGH);
    break;
    case 7:
      encenderLeds(HIGH,HIGH,HIGH,LOW,LOW,LOW,LOW);
    break;
    case 8:
      encenderLeds(HIGH,HIGH,HIGH,HIGH,HIGH,HIGH,HIGH);
    break;
    case 9:
      encenderLeds(HIGH,HIGH,HIGH,LOW,LOW,HIGH,HIGH);
    break;
  }	
}

// Apaga todos los leds del display
void apagarLeds()
{
    digitalWrite(A, LOW);
    digitalWrite(B, LOW);
    digitalWrite(C, LOW);
    digitalWrite(D, LOW);
    digitalWrite(E, LOW);
    digitalWrite(F, LOW);
    digitalWrite(G, LOW);
}

// Enciende los leds del display según los estados que recibe
void encenderLeds(int estado_A,int estado_B,int estado_C,int estado_D,int estado_E,int estado_F,int estado_G)
{
    digitalWrite(A, estado_A);
    digitalWrite(B, estado_B);
    digitalWrite(C, estado_C);
    digitalWrite(D, estado_D);
    digitalWrite(E, estado_E);
    digitalWrite(F, estado_F);
    digitalWrite(G, estado_G);
}

//Apaga y enciende los displays según se deba mostrar Unidades o Decenas
void encenderDigito(int digito)
{
	if (digito == UNIDAD)
    {
      digitalWrite(UNIDAD,LOW);
      digitalWrite(DECENAS, HIGH);
      delay(TIEMPO_DISPLAY_ON);
    }
  	else if (digito == DECENAS)
    {
      digitalWrite(DECENAS,LOW);
      digitalWrite(UNIDAD, HIGH);
      delay(TIEMPO_DISPLAY_ON);
    }
  	else
    {
      digitalWrite(UNIDAD, HIGH);
      digitalWrite(DECENAS,HIGH); 
    }
}

//Ejecuta la multiplexación, a partir del contador recibido determina la decena y la unidad a mostrar. Llama a las funciones para primero apagar los display, luego enviar las señales digitales para enceder el dígito deseado y por último encender el display en el que queremos mostrar dicho dígito. Luego repite el proceso con el siguiente display y el dígito a ser mostrado.                 
void imprimirCuenta(int contador)
{
    encenderDigito(APAGADOS);
    imprimirDigito(contador/10);
    encenderDigito(DECENAS);
    encenderDigito(APAGADOS);
    imprimirDigito(contador - 10*((int)contador / 10));
    encenderDigito(UNIDAD);
}

//Si el interruptor está encendido modifica el contador para sólo mostrar números primos, recibe por parámetro la temperatura para determinar si la cuenta es en aumento o regresiva.
int interruptor_on(int contador, int temperatura)
{  
  while (true)
  {
     if (primo(contador))
     {
        return contador;
        break;   
     }
     else if (temperatura >= 20)
     {
        contador++;
        if (contador == 99)
        {
          contador = 1;
        }
     }
     else
     {
       contador--;
     }
  }   	
  return contador;
}

// Recibe por párametro el número a mostrar y determina si es primo o no, devolviendo true en caso de ser primo
bool primo(int n)
{
  for(int i =2; i <n; i++)
  {
    if (n % i == 0)
    {
      return false;
    }
  }
  return true;
}

// A medida que aumenta la luz recibida por la fotoresistencia se apagan las luces leds.   
void luces_led(int lectura_foto)
{
 	  if(lectura_foto < 300)
    { 
      digitalWrite(GREEN, HIGH);
      digitalWrite(YELLOW, HIGH);
      digitalWrite(RED, HIGH);  
    }
    else if(lectura_foto >= 300 && lectura_foto < 500)
    {
      digitalWrite(GREEN, LOW);
      digitalWrite(YELLOW, HIGH);
      digitalWrite(RED, HIGH);
      
    }
    else if(lectura_foto >= 500 && lectura_foto < 700)
    {
      digitalWrite(GREEN, LOW);
      digitalWrite(YELLOW, LOW);
      digitalWrite(RED, HIGH);
    }
    else if(lectura_foto >= 700)
    {
      digitalWrite(GREEN, LOW);
      digitalWrite(YELLOW, LOW);
      digitalWrite(RED, LOW);
    }
}
